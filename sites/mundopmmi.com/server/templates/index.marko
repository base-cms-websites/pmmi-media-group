import hierarchyAliases from "@parameter1/base-cms-marko-web/utils/hierarchy-aliases";
import queryFragment from "@pmmi-media-group/package-shared/graphql/fragments/content-list";
import latestIssueFragment from "@pmmi-media-group/package-shared/graphql/fragments/magazine-latest-issue";

$ const { site, GAM, nativeX: nxConfig, i18n } = out.global;
$ const { id, alias, name, pageNode } = data;

<marko-web-website-section-page-layout id=id alias=alias name=name>
  <@head>
    <marko-web-gtm-website-section-context|{ context }| alias=alias>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-website-section-context>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      $ const adSlots = {
        "gpt-ad-leaderboard":     GAM.getAdUnit({ name: "leaderboard", aliases }),
        "gpt-ad-home-skyscraper": GAM.getAdUnit({ name: "skyscraper", aliases, size: [300, 600] }),
      };
       <marko-web-gam-slots slots=adSlots />
       <marko-web-p1-events-track-website-section node=section />
    </marko-web-resolve-page>
  </@head>
  <@above-container>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <shared-gam-wallpaper-ad aliases=aliases position="home_page" />
      <marko-web-gam-display-ad id="gpt-ad-leaderboard" modifiers=["above-container"] />
      <marko-web-gtm-slot prefix=site.get("gtm.slotPrefix") name="home-top-below-head" modifiers=["above-container"] />
    </marko-web-resolve-page>
  </@above-container>
  <@page>

    <marko-web-query|{ nodes }|
      name="website-optioned-content"
      params={ sectionId: id, optionName: "Pinned", limit: 5, requiresImage: true, queryFragment }
    >
      <shared-content-hero-flow nodes=nodes />
    </marko-web-query>

    <div class="row">
      <div class="col-lg-8 mb-block">
        <marko-web-query|{ nodes }|
          name="website-optioned-content"
          params={ sectionAlias: "home", optionName: "Pinned", limit: 6, skip: 5, requiresImage: true, queryFragment }
        >
          <shared-content-list-flow nodes=nodes>
            <@header>
              <marko-web-link>Artículos</marko-web-link>
            </@header>
          </shared-content-list-flow>
        </marko-web-query>
      </div>
      <div class="col-lg-4 mb-block page-rail">
        <marko-web-gam-display-ad id="gpt-ad-home-skyscraper" modifiers=["in-card"] />
      </div>
    </div>

    <div class="row">
      <div class="col-lg-8 mb-block">
        <common-leaders-home-page />
      </div>
      <div class="col-lg-4 mb-block page-rail">
        <marko-web-gtm-slot prefix=site.get("gtm.slotPrefix") name="home-leaders-vote-btn" />
        <marko-web-gtm-slot prefix=site.get("gtm.slotPrefix") name="home-02-right" />
        <marko-web-gtm-slot prefix=site.get("gtm.slotPrefix") name="home-03-right" />
      </div>
    </div>

    <div class="row">
      <div class="col-lg-4 mb-block">
        <marko-web-query|{ nodes }|
          name="website-scheduled-content"
          params={ sectionAlias: "automatizacion", limit: 4, withSite: false, queryFragment }
        >
          <shared-content-list-flow nodes=nodes>
            <@header>
              <marko-web-link href="/automatizacion">Automatización</marko-web-link>
            </@header>
          </shared-content-list-flow>
        </marko-web-query>
      </div>
      <div class="col-lg-4 mb-block">
        <marko-web-query|{ nodes }|
          name="website-scheduled-content"
          params={ sectionAlias: "empaque", limit: 4, withSite: false, queryFragment }
        >
          <shared-content-list-flow nodes=nodes>
            <@header>
              <marko-web-link href="/empaque">Empaque</marko-web-link>
            </@header>
          </shared-content-list-flow>
        </marko-web-query>
      </div>
      <div class="col-lg-4 mb-block">
        <marko-web-query|{ nodes }|
          name="website-scheduled-content"
          params={ sectionAlias: "procesamiento", limit: 4, withSite: false, queryFragment }
        >
          <shared-content-list-flow nodes=nodes>
            <@header>
              <marko-web-link href="/procesamiento">Procesamiento</marko-web-link>
            </@header>
          </shared-content-list-flow>
        </marko-web-query>
      </div>
    </div>

    <marko-web-query|{ nodes }|
      name="website-optioned-content"
      params={ sectionAlias: "home", optionName: "Pinned", limit: 5, skip: 11, requiresImage: true, queryFragment }
    >
      <shared-content-card-deck-flow nodes=nodes ad-index=1 ad-position="after" ad-name="imu1" >
        <@native-x index=2 name="load-more" />
      </shared-content-card-deck-flow>
    </marko-web-query>

    <marko-web-query|{ nodes }|
      name="website-optioned-content"
      params={ sectionAlias: "home", optionName: "Pinned", limit: 5, skip: 16, requiresImage: true, queryFragment }
    >
      <shared-content-card-deck-flow nodes=nodes ad-index=2 ad-name="imu2" >
        <@native-x index=1 name="load-more" />
      </shared-content-card-deck-flow>
    </marko-web-query>

    <marko-web-gtm-slot prefix=site.get("gtm.slotPrefix") name="home-bottom-wide" />

  </@page>
  <@below-page>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <marko-web-load-more
        component-name="content-load-more-flow"
        component-input={ aliases }
        fragment-name="content-list"
        query-name="website-scheduled-content"
        query-params={ sectionId: id, limit: 12, skip: 21, requiresImage: true }
        max-pages=0
        page-input={ for: "website-section", id }
        trigger-input={ buttonLabel: i18n("Load More Content") }
      />
    </marko-web-resolve-page>
  </@below-page>
</marko-web-website-section-page-layout>
